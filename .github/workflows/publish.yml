name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full repository history
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: universal-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: i686-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    env:
      ENABLE_RUNTIME_TESTS: false
      PKG_CONFIG_SYSROOT_DIR: /
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Verify Cargo.toml exists
        run: test -f Cargo.toml || (echo "Cargo.toml not found!"; ls -la; exit 1)
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')
      - name: Install tools
        run: sudo apt-get update --yes && sudo apt-get install --yes libxi-dev libx11-dev libxcb1 libxrandr2 libdbus-1-3 libxtst-dev libdbus-1-dev librust-x11-dev libpipewire-0.3-dev libwayland-dev libegl-dev libxkbcommon-dev libgbm-dev
        if: contains(matrix.os, 'ubuntu')
      - name: Build and upload binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: my_screenshots
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          # Add this to specify the working directory if needed
          # working-directory: path/to/your/cargo/project